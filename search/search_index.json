{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MODBUS TCP","text":"<pre><code>The Quality Inspection (QI) system can share 128 bytes of data with the Modbus master \ncontroller to exchange information.The start address of the holding register can be set \naccording to the master\u2019s requirements with the port and IP address.\n</code></pre>"},{"location":"#configure-with-siemens-plc","title":"CONFIGURE WITH SIEMENS PLC","text":""},{"location":"#1-setup-quality-inspection","title":"1. Setup Quality Inspection","text":"<p>1.Open the settings window of the QI app.</p> <p></p> <p>2.Enable Modbus TCP and set the IP address, Port No, Start Address.</p> <p></p> <p>Enable Modbus TCP - Enable/Disable the Modbus TCP client in the system.</p> <p>Port No           - Default value is 502, But it can change based on the master configuration.</p> <p>IP Address        - Set the IP address of the master controller (PLC). Make sure that both master and slave in same network.</p> <p>Start Address     - Holding register start address. For siemens PC, it is recommended to keep the value as 1. It can be adjusted based on the master controller settings.</p> <p>End Address       - The value will be 126byte from the starting character.</p> <p>Enable Comm       - Enable the Modbus communication to data transmission from Qi application to Modbus TCP master controller.</p>"},{"location":"#2-setup-the-siemens-plc","title":"2. Setup the Siemens PLC","text":"<pre><code>Siemens S71200 PLC example has taken for developing this manual. Siemens can communicate \nover Modbus TCP through Profinet Port.\n</code></pre> <p>1.Open the TIA Portal project.</p> <p></p> <p>2.Goto program block and add the \u201cMB_SERVER\u201d block in the program.</p> <p></p> <p>3.Add new data block for the \u201cMB_SERVER\u201d as like below.</p> <p></p> <p>4.Assign the label to \u201cMB_SERVER\u201d block. Refer Below Images.</p> <p></p> <p>EN: Enable the MB_Server Instruction.</p> <p>DISCONNECT: The instruction \"MB_SERVER\" enters into a passive connection with a partner module, which means the server responds to a TCP connection request from each requesting IP address. You can use this parameter to control when a connection request is accepted:</p> <pre><code>0: A passive connection is established when there is no communications connection.\n\n1: Initialization of the connection termination. If the input is set, no other operations are executed.\nThe value 7003 is output at the STATUS parameter after successful connection termination.\n</code></pre> <p>MB_HOLD_REG: Pointer to the Modbus holding register of the \"MB_SERVER\" instruction: Use a global data block with standard access as holding register. The holding register contains the values that may be accessed by a Modbus client using the Modbus functions 3 (read), 6 (write) and 16 (read).</p> <p>CONNECT: Set the \u201cServer_Connect\u201d DB value as explained in Step 4.</p> <p>NDR: New Data Ready. \u201c0\u201d Means No new data_ \u201c1\u201d means New data written by the Modbus client.</p> <p>DR: Data Read. \u201c0\u201d Means \u2013 No data read and \u201c1\u201d means Data read by the Modbus client.</p> <p>ERROR: If an error occurs during the call of the \"MB_SERVER\" instruction, the output of the ERROR parameter is set to TRUE. Detailed information about the cause of the problem is indicated by the STATUS parameter.</p> <p>STATUS: Error code of the instruction. Refer below Table.</p> <p></p> <p>5.Setup the \u201cMB Server\u201d Block parameter.</p> <p> Set the \u201cServer Connect\u201d Parameter.</p> <p>Interface ID      : HW-Idenfier of the IE-Interface Submodule - Set value as 64. Refer Below Image</p> <p></p> <p>ID                : Connection Identifier, Default ID is set to 1. If multiple Modbus slaves are connected to the controller, this value needs to be changed according to the connection.</p> <p>Connection Type   :  Set as 11.</p> <p>Active Established: Set as False.</p> <p>Remote Address    : Set remote IP address as 0.0.0.0 in case only one modbus slave is connected, If there are multiple devices then assign the IP address in Hex format.</p> <p>Remote Port       : Set as 0.</p> <p>Local Port No     : Start value=502. The number of the IP port defines which IP port is monitored for connection requests of the Modbus client. The following TCP port numbers must not be used for the passive connection of the \"MB_SERVER\" instruction: 20, 21, 25, 80, 102, 123, 5001, 34962, 34963 and 34964.</p> <p>Setup is completed in QI and PLC, Please establish the communication and check the Holding register data after enabling the Monitor all.</p> <p></p> <p>Handshaking of Registers between the PLC and ModbusTCP in the Quality Inspection Application is explained below.</p> <p>First 10Bytes of data is used was allocated as below table. </p> <p></p> <p>Communication    : Heartbeat Signal to PLC, Every 5sec, the value will be changed from 1 to 2.</p> <p>SKU ID           : In QI application max 999 Job variant can be set, This parameter help to select these SKU ID. For example, if you required to change the SKU ID from 1 to 100, You can directly push the 100 value over here.</p> <p>SKU ID FEEDBACK  : Once the SKU is successfully loaded, then the SKUID_FEEDBACK register will be written with the same \u2018SKUID Value\u2019 by the Application</p> <p>TRIGGER          : Trigger the loaded SKU ID. Push 01 to trigger the camera.</p> <p>TRIGGER FEEDBACK : Once the Application read this register TRIGGER with value \u20181\u2019, then the TRIGGER Register will be reset with number \u20180\u2019 and TRIGGER_FEEDBACK will be written as \u20181\u2019. The PLC will receive the TRIGGER_FEEDBACK and reset the Value with \u20180\u2019.</p> <p>CAMERA STATUS    : The CAMERA_STATUS Register value will be written by the Application. The PLC will monitor this camera status and perform the process steps as per their automation cycle. </p> <pre><code>Register Value as 3 =&gt; if the inspection is in progress. \nRegister Value as 2 =&gt; ready to take the trigger \nRegister Value as 0 =&gt; camera is not yet ready\n</code></pre> <p>RESULT           : The RESULT Register value will be written by the Application. The PLC will monitor this result and perform the process steps as per their automation cycle.</p> <pre><code>Register Value as 2 =&gt; if the Result is FAIL. \nRegister Value as 1 =&gt; if the Result is PASS. \nRegister Value as 0 =&gt; if the Result is Not Yet Ready.\n</code></pre> <p>The Result data will be pushed in 11th register.</p> <p>Location of MODBUS Registers: Register Location: Start Address [Refer Settings] + Register Location</p> <p></p> <p>You can set the required result of each SKU ID in the Communication Window of QI. For setting the result, follow the below steps.</p> <pre><code>1.Click on Communication and go to setup window.\n</code></pre> <p></p> <pre><code>2.Select the SKU ID and select the communication string of the each tool from the list.\n</code></pre> <p></p> <pre><code>3.Save the setting and go back.\n</code></pre> <p>After Each successful trigger from PLC, The QI Application will send the result string to PLC. </p>"}]}